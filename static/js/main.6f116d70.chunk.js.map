{"version":3,"sources":["Zoom.js","App.js","reportWebVitals.js","index.js"],"names":["ZoomMtg","setZoomJSLib","preLoadWasm","prepareWebSDK","i18n","load","reload","Zoom","params","useParams","room","split","apiKey","meetingNumber","userName","passWord","crypto","require","signature","document","getElementById","style","display","init","leaveUrl","success","console","log","join","userEmail","error","startMeeting","apiSecret","role","timestamp","Date","getTime","msg","Buffer","from","toString","hash","createHmac","update","digest","generateSignature","getElementsByClassName","click","App","className","path","component","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","createBrowserHistory"],"mappings":"+FAAA,+CAIAA,UAAQC,aAAa,mCAAoC,OACzDD,UAAQE,cACRF,UAAQG,gBACRH,UAAQI,KAAKC,KAAK,SAClBL,UAAQI,KAAKE,OAAO,SAyELC,IAvEF,WACX,IACMC,EADSC,cAATC,KACcC,MAAM,KAGxBC,EAAS,yBACTC,EAAgBL,EAAO,GAGvBM,EAAWN,EAAO,GAElBO,EAAWP,EAAO,GAEdQ,EAASC,EAAQ,KAuDvB,OAhCA,SAAsBC,GACpBC,SAASC,eAAe,cAAcC,MAAMC,QAAU,QAEtDtB,UAAQuB,KAAK,CACXC,SAhCS,wBAiCTC,QAAS,SAACA,GACRC,QAAQC,IAAIF,GACZzB,UAAQ4B,KAAK,CACXV,UAAWA,EACXL,cAAeA,EACfC,SAAUA,EACVF,OAAQA,EACRiB,UAtCM,GAuCNd,SAAUA,EACVU,QAAS,SAACA,GACRC,QAAQC,IAAIF,IAEdK,MAAO,SAACA,GACNJ,QAAQC,IAAIG,OAIlBA,MAAO,SAACA,GACNJ,QAAQC,IAAIG,MA1BhBC,CAlBF,SAA2BnB,EAAQoB,EAAWnB,EAAeoB,GAC3D,IAAMC,GAAY,IAAIC,MAAOC,UAAY,IACnCC,EAAMC,EAAOC,KAAK3B,EAASC,EAAgBqB,EAAYD,GAAMO,SACjE,UAEIC,EAAOzB,EACV0B,WAAW,SAAUV,GACrBW,OAAON,GACPO,OAAO,UAKV,OAJkBN,EAAOC,KAAP,UACb3B,EADa,YACHC,EADG,YACcqB,EADd,YAC2BD,EAD3B,YACmCQ,IACnDD,SAAS,UAMKK,CAAkBjC,EA5BpB,uCA4BuCC,EAzB9C,IA0DGM,SAAS2B,uBAAuB,sGACtC,GAAGC,QAEF,wC,ufC9DMC,E,4JAXb,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,cAAcC,UAAW5C,Y,GAL7B6C,aCQHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OACP,kBAAC,IAAD,CAAQC,sBAAoB,GAC1B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOb,UAAWH,MAGtB7B,SAASC,eAAe,SAG1BiC,M","file":"static/js/main.6f116d70.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ZoomMtg } from '@zoomus/websdk';\r\n\r\nZoomMtg.setZoomJSLib('https://source.zoom.us/1.9.7/lib', '/av');\r\nZoomMtg.preLoadWasm();\r\nZoomMtg.prepareWebSDK();\r\nZoomMtg.i18n.load('en-US');\r\nZoomMtg.i18n.reload('en-US');\r\n\r\nconst Zoom = () => {\r\n  let { room } = useParams();\r\n  const params = room.split('-');\r\n\r\n  let apiSecret = 'dXNpRJHw9Oeme5tqiNEvpBsJ8EfOh0UDBB25',\r\n    apiKey = 'MVfVOSCEQwGZNKFD2slZ-w',\r\n    meetingNumber = params[0],\r\n    role = 0,\r\n    leaveUrl = 'http://localhost:3000',\r\n    userName = params[2],\r\n    userEmail = '',\r\n    passWord = params[1];\r\n\r\n  const crypto = require('crypto');\r\n\r\n  function generateSignature(apiKey, apiSecret, meetingNumber, role) {\r\n    const timestamp = new Date().getTime() - 30000;\r\n    const msg = Buffer.from(apiKey + meetingNumber + timestamp + role).toString(\r\n      'base64'\r\n    );\r\n    const hash = crypto\r\n      .createHmac('sha256', apiSecret)\r\n      .update(msg)\r\n      .digest('base64');\r\n    const signature = Buffer.from(\r\n      `${apiKey}.${meetingNumber}.${timestamp}.${role}.${hash}`\r\n    ).toString('base64');\r\n\r\n    return signature;\r\n  }\r\n\r\n  function getSignature(e) {\r\n    let signature = generateSignature(apiKey, apiSecret, meetingNumber, role);\r\n    startMeeting(signature);\r\n  }\r\n\r\n  function startMeeting(signature) {\r\n    document.getElementById('zmmtg-root').style.display = 'block';\r\n\r\n    ZoomMtg.init({\r\n      leaveUrl: leaveUrl,\r\n      success: (success) => {\r\n        console.log(success);\r\n        ZoomMtg.join({\r\n          signature: signature,\r\n          meetingNumber: meetingNumber,\r\n          userName: userName,\r\n          apiKey: apiKey,\r\n          userEmail: userEmail,\r\n          passWord: passWord,\r\n          success: (success) => {\r\n            console.log(success);\r\n          },\r\n          error: (error) => {\r\n            console.log(error);\r\n          },\r\n        });\r\n      },\r\n      error: (error) => {\r\n        console.log(error);\r\n      },\r\n    });\r\n  }\r\n  \r\n  getSignature();\r\n  var click = document.getElementsByClassName(\"zm-btn joinWindowBtn btn btn-primary btn-block btn-lg submit zm-btn--default zm-btn__outline--blue\")\r\n  click[0].click();\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default Zoom;\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Zoom from './Zoom';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route path=\"/zoom/:room\" component={Zoom}></Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router createBrowserHistory>\r\n    <Switch>\r\n      <Route component={App} />\r\n    </Switch>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}